{"version":3,"sources":["assets/logo.svg","components/navigation/Navigation.tsx","components/home/Home.tsx","components/about/About.tsx","components/contact/Contact.tsx","components/gallery/Gallery.tsx","components/testimonials/Testimonials.tsx","components/main/Main.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Navigation","_Component","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","react_default","a","createElement","Navbar","id","bg","expand","Collapse","Nav","NavDropdown","src","title","Navigation_NavBarImage","Item","href","Divider","Component","NavBarImage","Image","require","style","width","height","React","Home","apply","arguments","className","About","Contact","Gallery","Testimonials","Main","react_router","exact","path","component","App","react_router_dom","Navigation_Navigation","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wMCO3BC,EAAb,SAAAC,GAEE,SAAAD,EAAYE,GAAe,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KACnBH,IAHV,OAAAC,OAAAM,EAAA,EAAAN,CAAAH,EAAAC,GAAAE,OAAAO,EAAA,EAAAP,CAAAH,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAOI,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,MAAMC,GAAG,QAAQC,OAAO,MACnCN,EAAAC,EAAAC,cAACC,EAAA,EAAOI,SAAR,CAAiBH,GAAG,gBAClBJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAaC,IAAI,wBAAwBC,MAAOX,EAAAC,EAAAC,cAACU,EAAD,MAAgBR,GAAG,sBACjEJ,EAAAC,EAAAC,cAACO,EAAA,EAAYI,KAAb,CAAkBC,KAAK,SAAvB,QACAd,EAAAC,EAAAC,cAACO,EAAA,EAAYM,QAAb,MACAf,EAAAC,EAAAC,cAACO,EAAA,EAAYI,KAAb,CAAkBC,KAAK,YAAvB,WACAd,EAAAC,EAAAC,cAACO,EAAA,EAAYM,QAAb,MACAf,EAAAC,EAAAC,cAACO,EAAA,EAAYI,KAAb,CAAkBC,KAAK,UAAvB,SACAd,EAAAC,EAAAC,cAACO,EAAA,EAAYM,QAAb,MACAf,EAAAC,EAAAC,cAACO,EAAA,EAAYI,KAAb,CAAkBC,KAAK,iBAAvB,gBACAd,EAAAC,EAAAC,cAACO,EAAA,EAAYM,QAAb,MACAf,EAAAC,EAAAC,cAACO,EAAA,EAAYI,KAAb,CAAkBC,KAAK,YAAvB,mBApBZ3B,EAAA,CAAgC6B,aA6B1BC,mLAEF,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACER,IAAKS,EAAQ,IACbC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,aALVC,IAAMP,mBClCnBQ,EAAb,SAAApC,GAAA,SAAAoC,IAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GAAAlC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAAC,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAAkC,EAAApC,GAAAE,OAAAO,EAAA,EAAAP,CAAAkC,EAAA,EAAA1B,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,oBAAf,aAHNH,EAAA,CAA0BR,aCAbY,EAAb,SAAAxC,GAAA,SAAAwC,IAAA,OAAAtC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,GAAAtC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAH,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAAsC,EAAAxC,GAAAE,OAAAO,EAAA,EAAAP,CAAAsC,EAAA,EAAA9B,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,SAAf,cAHNC,EAAA,CAA2BZ,aCAda,EAAb,SAAAzC,GAAA,SAAAyC,IAAA,OAAAvC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAAvC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuC,GAAAJ,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAAuC,EAAAzC,GAAAE,OAAAO,EAAA,EAAAP,CAAAuC,EAAA,EAAA/B,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WACf3B,EAAAC,EAAAC,cAAA,wCAA+BF,EAAAC,EAAAC,cAAA,+CAJvC2B,EAAA,CAA6Bb,aCChBc,EAAb,SAAA1C,GAAA,SAAA0C,IAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GAAAxC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAL,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAAwC,EAAA1C,GAAAE,OAAAO,EAAA,EAAAP,CAAAwC,EAAA,EAAAhC,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WACX3B,EAAAC,EAAAC,cAAA,0BAJZ4B,EAAA,CAA6Bd,aCAhBe,EAAb,SAAA3C,GAAA,SAAA2C,IAAA,OAAAzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,GAAAzC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAAN,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAAyC,EAAA3C,GAAAE,OAAAO,EAAA,EAAAP,CAAAyC,EAAA,EAAAjC,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WACX3B,EAAAC,EAAAC,cAAA,+BAJZ6B,EAAA,CAAkCf,aCKrBgB,EAAb,SAAA5C,GAAA,SAAA4C,IAAA,OAAA1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAAA1C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAAP,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAA0C,EAAA5C,GAAAE,OAAAO,EAAA,EAAAP,CAAA0C,EAAA,EAAAlC,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACIjC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWZ,IACrCxB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWR,IACtC5B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC7B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWN,IACxC9B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC7B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWL,SATzDC,EAAA,CAA0BhB,qBCWXqB,EAbf,SAAAjD,GAAA,SAAAiD,IAAA,OAAA/C,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,GAAA/C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAAZ,MAAAjC,KAAAkC,YAAA,OAAApC,OAAAM,EAAA,EAAAN,CAAA+C,EAAAjD,GAAAE,OAAAO,EAAA,EAAAP,CAAA+C,EAAA,EAAAvC,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAD,YANVH,EAAA,CAAyBrB,aCMLyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SDkI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ada4101b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { Navbar, Nav, NavDropdown, Image } from 'react-bootstrap';\n\ninterface PassedProps {}\n\ntype Props = PassedProps;\n\nexport class Navigation extends Component {\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Navbar id=\"nav\" bg=\"light\" expand=\"lg\">\n      <Navbar.Collapse id=\"nav-dropdown\">\n        <Nav>\n          <NavDropdown src=\"../../assets/logo.svg\" title={<NavBarImage/>} id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/home\">Home</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/gallery\">Gallery</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/about\">About</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/testimonials\">Testimonials</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/contact\">Book Me</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    );\n  }\n}\n\nclass NavBarImage extends React.Component {\n  render() {\n    return (\n      <Image\n        src={require('../../assets/logo.svg')}\n        style={{ width: 30, height: 30 }}\n      />\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nexport class Home extends Component {\n  render() {\n    return (\n      <div className='home section-one'>\n        Home!\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nexport class About extends Component {\n  render() {\n    return (\n      <div className='about'>\n        About!\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nexport class Contact extends Component {\n  render() {\n    return (\n        <div className='contact'>\n        <p>You can reach me via email: <strong>helloworld!@example.com</strong></p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n// import { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nexport class Gallery extends Component {\n  render() {\n    return (\n        <div className=\"gallery\">\n            <p>Gallery!</p>\n        </div>\n    );\n  }\n}\n\nexport default Gallery;\n","import React, { Component } from 'react';\n// import { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nexport class Testimonials extends Component {\n  render() {\n    return (\n        <div className=\"gallery\">\n            <p>Testimonials!</p>\n        </div>\n    );\n  }\n}\n\nexport default Testimonials;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from '../home/Home'\nimport { About } from '../about/About';\nimport { Contact } from '../contact/Contact';\nimport { Gallery } from '../gallery/Gallery';\nimport { Testimonials } from '../testimonials/Testimonials';\n\nexport class Main extends Component {\n  render() {\n    return (\n        <Switch>\n            <Route exact path='/home' component={Home}></Route>\n            <Route exact path='/about' component={About}></Route>\n            <Route exact path='/contact' component={Contact}></Route>\n            <Route exact path='/gallery' component={Gallery}></Route>\n            <Route exact path='/contact' component={Contact}></Route>\n            <Route exact path='/testimonials' component={Testimonials}></Route>\n        </Switch>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Navigation } from \"../components/navigation/Navigation\";\nimport { Main } from \"../components/main/Main\";\nimport { BrowserRouter } from 'react-router-dom';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className='app'>\n        <BrowserRouter>\n          <Navigation />\n          <Main />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}